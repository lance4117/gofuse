// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.1
// source: test.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HealthCheckResponse_Status int32

const (
	HealthCheckResponse_UNKNOWN     HealthCheckResponse_Status = 0
	HealthCheckResponse_SERVING     HealthCheckResponse_Status = 1
	HealthCheckResponse_NOT_SERVING HealthCheckResponse_Status = 2
)

// Enum value maps for HealthCheckResponse_Status.
var (
	HealthCheckResponse_Status_name = map[int32]string{
		0: "UNKNOWN",
		1: "SERVING",
		2: "NOT_SERVING",
	}
	HealthCheckResponse_Status_value = map[string]int32{
		"UNKNOWN":     0,
		"SERVING":     1,
		"NOT_SERVING": 2,
	}
)

func (x HealthCheckResponse_Status) Enum() *HealthCheckResponse_Status {
	p := new(HealthCheckResponse_Status)
	*p = x
	return p
}

func (x HealthCheckResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HealthCheckResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_test_proto_enumTypes[0].Descriptor()
}

func (HealthCheckResponse_Status) Type() protoreflect.EnumType {
	return &file_test_proto_enumTypes[0]
}

func (x HealthCheckResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HealthCheckResponse_Status.Descriptor instead.
func (HealthCheckResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{8, 0}
}

// ========== SayHello ==========
type HelloRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                                                           // 测试字符串
	Meta          map[string]string      `protobuf:"bytes,2,rep,name=meta,proto3" json:"meta,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 测试 map
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HelloRequest) Reset() {
	*x = HelloRequest{}
	mi := &file_test_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HelloRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloRequest) ProtoMessage() {}

func (x *HelloRequest) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloRequest.ProtoReflect.Descriptor instead.
func (*HelloRequest) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{0}
}

func (x *HelloRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HelloRequest) GetMeta() map[string]string {
	if x != nil {
		return x.Meta
	}
	return nil
}

type HelloReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	TsUnix        int64                  `protobuf:"varint,2,opt,name=ts_unix,json=tsUnix,proto3" json:"ts_unix,omitempty"` // 服务器时间戳
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HelloReply) Reset() {
	*x = HelloReply{}
	mi := &file_test_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HelloReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloReply) ProtoMessage() {}

func (x *HelloReply) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloReply.ProtoReflect.Descriptor instead.
func (*HelloReply) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{1}
}

func (x *HelloReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *HelloReply) GetTsUnix() int64 {
	if x != nil {
		return x.TsUnix
	}
	return 0
}

// ========== CountDown ==========
type CountDownRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	From          int32                  `protobuf:"varint,1,opt,name=from,proto3" json:"from,omitempty"`                               // 例如 from=5 -> 5,4,3,2,1
	IntervalMs    int32                  `protobuf:"varint,2,opt,name=interval_ms,json=intervalMs,proto3" json:"interval_ms,omitempty"` // 两次下发间隔，默认可由服务端设定
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CountDownRequest) Reset() {
	*x = CountDownRequest{}
	mi := &file_test_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountDownRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountDownRequest) ProtoMessage() {}

func (x *CountDownRequest) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountDownRequest.ProtoReflect.Descriptor instead.
func (*CountDownRequest) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{2}
}

func (x *CountDownRequest) GetFrom() int32 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *CountDownRequest) GetIntervalMs() int32 {
	if x != nil {
		return x.IntervalMs
	}
	return 0
}

type CountDownReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Current       int32                  `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"` // 当前数字
	TsUnix        int64                  `protobuf:"varint,2,opt,name=ts_unix,json=tsUnix,proto3" json:"ts_unix,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CountDownReply) Reset() {
	*x = CountDownReply{}
	mi := &file_test_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountDownReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountDownReply) ProtoMessage() {}

func (x *CountDownReply) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountDownReply.ProtoReflect.Descriptor instead.
func (*CountDownReply) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{3}
}

func (x *CountDownReply) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *CountDownReply) GetTsUnix() int64 {
	if x != nil {
		return x.TsUnix
	}
	return 0
}

// ========== Sum（Client streaming）==========
type SumRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         int64                  `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"` // 客户端不断发送的数字
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SumRequest) Reset() {
	*x = SumRequest{}
	mi := &file_test_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SumRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SumRequest) ProtoMessage() {}

func (x *SumRequest) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SumRequest.ProtoReflect.Descriptor instead.
func (*SumRequest) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{4}
}

func (x *SumRequest) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type SumReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int64                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` // 服务器汇总总和
	Count         int32                  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"` // 接收了多少个包
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SumReply) Reset() {
	*x = SumReply{}
	mi := &file_test_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SumReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SumReply) ProtoMessage() {}

func (x *SumReply) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SumReply.ProtoReflect.Descriptor instead.
func (*SumReply) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{5}
}

func (x *SumReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SumReply) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

// ========== Chat（Bidirectional streaming）==========
type ChatMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	From          string                 `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`                    // 发送者 ID/昵称
	Text          string                 `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`                    // 文本内容
	Seq           int64                  `protobuf:"varint,3,opt,name=seq,proto3" json:"seq,omitempty"`                     // 自增序号（客户端或服务端维护均可）
	TsUnix        int64                  `protobuf:"varint,4,opt,name=ts_unix,json=tsUnix,proto3" json:"ts_unix,omitempty"` // 发送时间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatMessage) Reset() {
	*x = ChatMessage{}
	mi := &file_test_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage) ProtoMessage() {}

func (x *ChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage.ProtoReflect.Descriptor instead.
func (*ChatMessage) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{6}
}

func (x *ChatMessage) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *ChatMessage) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *ChatMessage) GetSeq() int64 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *ChatMessage) GetTsUnix() int64 {
	if x != nil {
		return x.TsUnix
	}
	return 0
}

// ========== Health ==========
type HealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Service       string                 `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"` // 可传具体服务名，空表示默认
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_test_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{7}
}

func (x *HealthCheckRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

type HealthCheckResponse struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Status        HealthCheckResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=test.HealthCheckResponse_Status" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_test_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{8}
}

func (x *HealthCheckResponse) GetStatus() HealthCheckResponse_Status {
	if x != nil {
		return x.Status
	}
	return HealthCheckResponse_UNKNOWN
}

var File_test_proto protoreflect.FileDescriptor

const file_test_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"test.proto\x12\x04test\"\x8d\x01\n" +
	"\fHelloRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x120\n" +
	"\x04meta\x18\x02 \x03(\v2\x1c.test.HelloRequest.MetaEntryR\x04meta\x1a7\n" +
	"\tMetaEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"?\n" +
	"\n" +
	"HelloReply\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x17\n" +
	"\ats_unix\x18\x02 \x01(\x03R\x06tsUnix\"G\n" +
	"\x10CountDownRequest\x12\x12\n" +
	"\x04from\x18\x01 \x01(\x05R\x04from\x12\x1f\n" +
	"\vinterval_ms\x18\x02 \x01(\x05R\n" +
	"intervalMs\"C\n" +
	"\x0eCountDownReply\x12\x18\n" +
	"\acurrent\x18\x01 \x01(\x05R\acurrent\x12\x17\n" +
	"\ats_unix\x18\x02 \x01(\x03R\x06tsUnix\"\"\n" +
	"\n" +
	"SumRequest\x12\x14\n" +
	"\x05value\x18\x01 \x01(\x03R\x05value\"6\n" +
	"\bSumReply\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x03R\x05total\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x05R\x05count\"`\n" +
	"\vChatMessage\x12\x12\n" +
	"\x04from\x18\x01 \x01(\tR\x04from\x12\x12\n" +
	"\x04text\x18\x02 \x01(\tR\x04text\x12\x10\n" +
	"\x03seq\x18\x03 \x01(\x03R\x03seq\x12\x17\n" +
	"\ats_unix\x18\x04 \x01(\x03R\x06tsUnix\".\n" +
	"\x12HealthCheckRequest\x12\x18\n" +
	"\aservice\x18\x01 \x01(\tR\aservice\"\x84\x01\n" +
	"\x13HealthCheckResponse\x128\n" +
	"\x06status\x18\x01 \x01(\x0e2 .test.HealthCheckResponse.StatusR\x06status\"3\n" +
	"\x06Status\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\v\n" +
	"\aSERVING\x10\x01\x12\x0f\n" +
	"\vNOT_SERVING\x10\x022\x91\x02\n" +
	"\x04Demo\x120\n" +
	"\bSayHello\x12\x12.test.HelloRequest\x1a\x10.test.HelloReply\x12;\n" +
	"\tCountDown\x12\x16.test.CountDownRequest\x1a\x14.test.CountDownReply0\x01\x12)\n" +
	"\x03Sum\x12\x10.test.SumRequest\x1a\x0e.test.SumReply(\x01\x120\n" +
	"\x04Chat\x12\x11.test.ChatMessage\x1a\x11.test.ChatMessage(\x010\x01\x12=\n" +
	"\x06Health\x12\x18.test.HealthCheckRequest\x1a\x19.test.HealthCheckResponseB\tZ\a./pb;pbb\x06proto3"

var (
	file_test_proto_rawDescOnce sync.Once
	file_test_proto_rawDescData []byte
)

func file_test_proto_rawDescGZIP() []byte {
	file_test_proto_rawDescOnce.Do(func() {
		file_test_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_test_proto_rawDesc), len(file_test_proto_rawDesc)))
	})
	return file_test_proto_rawDescData
}

var file_test_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_test_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_test_proto_goTypes = []any{
	(HealthCheckResponse_Status)(0), // 0: test.HealthCheckResponse.Status
	(*HelloRequest)(nil),            // 1: test.HelloRequest
	(*HelloReply)(nil),              // 2: test.HelloReply
	(*CountDownRequest)(nil),        // 3: test.CountDownRequest
	(*CountDownReply)(nil),          // 4: test.CountDownReply
	(*SumRequest)(nil),              // 5: test.SumRequest
	(*SumReply)(nil),                // 6: test.SumReply
	(*ChatMessage)(nil),             // 7: test.ChatMessage
	(*HealthCheckRequest)(nil),      // 8: test.HealthCheckRequest
	(*HealthCheckResponse)(nil),     // 9: test.HealthCheckResponse
	nil,                             // 10: test.HelloRequest.MetaEntry
}
var file_test_proto_depIdxs = []int32{
	10, // 0: test.HelloRequest.meta:type_name -> test.HelloRequest.MetaEntry
	0,  // 1: test.HealthCheckResponse.status:type_name -> test.HealthCheckResponse.Status
	1,  // 2: test.Demo.SayHello:input_type -> test.HelloRequest
	3,  // 3: test.Demo.CountDown:input_type -> test.CountDownRequest
	5,  // 4: test.Demo.Sum:input_type -> test.SumRequest
	7,  // 5: test.Demo.Chat:input_type -> test.ChatMessage
	8,  // 6: test.Demo.Health:input_type -> test.HealthCheckRequest
	2,  // 7: test.Demo.SayHello:output_type -> test.HelloReply
	4,  // 8: test.Demo.CountDown:output_type -> test.CountDownReply
	6,  // 9: test.Demo.Sum:output_type -> test.SumReply
	7,  // 10: test.Demo.Chat:output_type -> test.ChatMessage
	9,  // 11: test.Demo.Health:output_type -> test.HealthCheckResponse
	7,  // [7:12] is the sub-list for method output_type
	2,  // [2:7] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_test_proto_init() }
func file_test_proto_init() {
	if File_test_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_test_proto_rawDesc), len(file_test_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_test_proto_goTypes,
		DependencyIndexes: file_test_proto_depIdxs,
		EnumInfos:         file_test_proto_enumTypes,
		MessageInfos:      file_test_proto_msgTypes,
	}.Build()
	File_test_proto = out.File
	file_test_proto_goTypes = nil
	file_test_proto_depIdxs = nil
}
